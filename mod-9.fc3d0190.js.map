{"mappings":"AA6CA,MAAMA,OAAS,IAAIC,SAAQ,CAACC,EAASC,KACnC,IAAIC,EAAQ,EAEZ,IAAK,IAAIC,EAAI,EAAGA,EAAI,IAASA,IAC3BD,GAASC,EAGPD,EAAQ,GAAM,EAChBF,EAAQE,GAERD,EAAO,MAIXG,QAAQC,IAAI,SAAUP","sources":["src/js/mod-9-part-2.js"],"sourcesContent":["//Promises\n\n// const isSuccess = true;\n// const isSuccess = false;\n\n// const promise = new Promise((resolve, reject) => {\n//   setTimeout(() => {\n//     if (isSuccess) {\n//       resolve('Success');\n//     } else {\n//       reject('Error');\n//     }\n//   }, 2000);\n// });\n// // console.log('promise', promise);\n\n// console.log('before promise .then');\n\n// promise\n//   .then(value => {\n//     console.log('On resolve inside promise');\n//     console.log('value', value);\n//   })\n//   .catch(error => {\n//     console.log('On reject inside promise');\n//     console.log('error', error);\n//   })\n//   .finally(() => console.log('Promise settled'));\n\n// console.log('after promise .then');\n// [1, 2, 3, 4, 5].map((element, index, arr) => {});\n\n// const promise = new Promise((resolve, reject) => {\n//   resolve(10);\n// });\n\n// const promise = new Promise((resolve, reject) => {\n//   reject(10);\n// });\n\n// const promise = new Promise((ok, error) => {});\n\n// console.log(\"a\");\n// console.log(\"b\");\n\nconst result = new Promise((resolve, reject) => {\n  let total = 0;\n\n  for (let i = 0; i < 1000000; i++) {\n    total += i;\n  }\n\n  if (total % 2 === 0) {\n    resolve(total);\n  } else {\n    reject(8);\n  }\n});\n\nconsole.log('result', result);\n\n// const result = new Promise((ok, failed) => {\n//   let total = 0;\n\n//   for (let i = 0; i < 1000000000; i++) {\n//     total += i;\n//   }\n\n//   if (total % 2 === 0) {\n//     ok(total);\n//   } else {\n//     failed(8);\n//   }\n// });\n\n// result\n//   .then((data) => console.log(data))\n//   .then((data) => console.log(data))\n//   .then((data) => console.log(data))\n//   .catch((error) => console.log(error))\n//   .finally(() => console.log(\"finally\"));\n\n// let isLoading = true;\n\n// result\n//   .then(\n//     (data) => console.log(data),\n//     (error) => console.log(error)\n//   )\n//   .then(\n//     (data) => console.log(data),\n//     (error) => console.log(error)\n//   )\n//   .then(\n//     (data) => console.log(data),\n//     (error) => console.log(error)\n//   )\n//   .finally(() => (isLoading = false));\n\n// Promise.resolve();\n\n// class vs екземпляр класу\n\n//   .then((data) => console.log(data))\n//   .then((data) => console.log(data))\n//   .finally(() => console.log(\"finally\"));\n\n// addEventListener(\"click\", registerClick);\n\n// console.log(result);\n\n// setTimeout(() => {\n//   console.log(\"a\");\n// }, 1000);\n\n// Promise.resolve(10);\n\n// function promiseCreator(counter) {\n//   return new Promise((ok, failed) => {\n//     let total = 0;\n\n//     for (let i = 0; i < counter; i++) {\n//       total += i;\n//     }\n\n//     // console.log(total);\n\n//     if (total % 2 === 0) {\n//       ok(total);\n//     } else {\n//       failed('Error');\n//     }\n//   });\n// }\n\n// promiseCreator(10)\n//   .then((data) => console.log(data))\n//   .catch((error) => console.log(error));\n\n// promiseCreator(1001)\n//   .then((data) => console.log(data))\n//   .catch((error) => console.log(error));\n\n// Promise.all([promiseCreator(8), promiseCreator(1001)])\n//   .then((data) => {\n//     console.log(\"data\", data);\n//   })\n//   .catch((error) => {\n//     console.log(\"error\", error);\n//   });\n\n// Promise.race([promiseCreator(10), promiseCreator(1001)])\n//   .then((data) => {\n//     console.log(\"data\", data);\n//   })\n//   .catch((error) => {\n//     console.log(\"error\", error);\n//   });\n\n// Promise.allSettled([promiseCreator(10), promiseCreator(1001)])\n//   .then(data => {\n//     console.log('data', data);\n//   })\n//   .catch(error => {\n//     console.log('error', error);\n//   });\n"],"names":["result","Promise","resolve","reject","total","i","console","log"],"version":3,"file":"mod-9.fc3d0190.js.map"}