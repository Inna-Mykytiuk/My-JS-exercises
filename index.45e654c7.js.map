{"mappings":"YAuWA,IAAIA,EAAK,CACPC,KAAM,OACNC,OAAQ,IAONC,EAAU,IAAKH,GACfI,EAAU,IAAKJ,EALjBC,KAAM,OACNI,OAAQ,IAKVC,QAAQC,IAAIJ,GACZG,QAAQC,IAAIH,GAGZ,IAAII,EAAK,IAAKR,EAAIS,MAAM,GACxBH,QAAQC,IAAI,KAAMC,E","sources":["src/js/mod-3-part-2.js"],"sourcesContent":["// # Модуль 3 Занятие 6. Деструктуризация и rest/spread\n\n// ## Example 1 - Деструктуризация\n\n// Перепиши функцию так, чтобы она принимала один объект параметров, вместо набора\n// независимых аргументов.\n\n// ```js\nfunction calcBMI({ weight, height }) {\n  const numericWeight = Number(weight.replace(',', '.'));\n  const numericHeight = Number(height.replace(',', '.'));\n  return Number((numericWeight / numericHeight ** 2).toFixed(1));\n}\n\nfunction calcBMI(clientParams) {\n  const { weight, height } = clientParams;\n  const numericWeight = Number(weight.replace(',', '.'));\n  const numericHeight = Number(height.replace(',', '.'));\n  return Number((numericWeight / numericHeight ** 2).toFixed(1));\n}\n\n// // Было\n// // console.log(calcBMI('88,3', '1.75'));\n// // console.log(calcBMI('68,3', '1.65'));\n// // console.log(calcBMI('118,3', '1.95'));\n\n// // Ожидается\n// console.log(\n//   calcBMI({\n//     weight: '88,3',\n//     height: '1.75',\n//   }),\n// );\n// console.log(\n//   calcBMI({\n//     weight: '68,3',\n//     height: '1.65',\n//   }),\n// );\n// console.log(\n//   calcBMI({\n//     weight: '118,3',\n//     height: '1.95',\n//   }),\n// );\n// ```\n\n// ## Example 2 - Деструктуризация\n\n// Перепиши функцию так, чтобы она принимала один объект параметров, вместо набора\n// независимых аргументов.\n\n// ```js\n// function printContactsInfo(names, phones) {\n//   const nameList = names.split(',');\n//   const phoneList = phones.split(',');\n//   for (let i = 0; i < nameList.length; i += 1) {\n//     console.log(`${nameList[i]}: ${phoneList[i]}`);\n//   }\n// }\n\n// function printContactsInfo({ names, phones }) {\n//   const nameList = names.split(\",\");\n//   const phoneList = phones.split(\",\");\n//   for (let i = 0; i < nameList.length; i += 1) {\n//     console.log(`${nameList[i]}: ${phoneList[i]}`);\n//   }\n// }\n\n// function printContactsInfo(data) {\n//   const { names, phones } = data;\n//   const nameList = names.split(\",\");\n//   const phoneList = phones.split(\",\");\n//   for (let i = 0; i < nameList.length; i += 1) {\n//     console.log(`${nameList[i]}: ${phoneList[i]}`);\n//   }\n// }\n\n// // Было\n// // printContactsInfo(\n// //   'Jacob,William,Solomon,Artemis',\n// //   '89001234567,89001112233,890055566377,890055566300',\n// // );\n\n// // Ожидается\n// printContactsInfo({\n//   names: 'Jacob,William,Solomon,Artemis',\n//   phones: '89001234567,89001112233,890055566377,890055566300',\n// });\n// ```\n\n// ## Example 3 - Глубокая деструктуризация\n\n// Перепиши функцию так, чтобы она принимала один объект параметров, вместо набора\n// независимых аргументов.\n\n// ```js\n// function getBotReport(companyInfo) {\n//   return `${companyInfo.companyName} has ${\n//     companyInfo.bots.repair + companyInfo.bots.defence\n//   } bots in stock. Repair bots count is ${\n//     companyInfo.bots.repair\n//   }. Defence bots count is ${companyInfo.bots.defence}`;\n// }\n\n// function getBotReport(companyInfo) {\n//   const companyName = companyInfo.companyName;\n//   const repairBots = companyInfo.bots.repair;\n//   const defenceBots = companyInfo.bots.defence;\n//   return `${companyName} has ${\n//     repairBots + defenceBots\n//   } bots in stock. Repair bots count is ${repairBots}. Defence bots count is ${defenceBots}`;\n// }\n\n// function getBotReport(companyInfo) {\n//   // this = undefined || window\n//   // const companyInfo = {\n//   // companyName: \"Cyberdyne Systems\",\n//   //   bots: {\n//   //     repair: 150,\n//   //     defence: 50,\n//   //   },\n//   // }\n\n//   const { companyName, bots } = companyInfo;\n//   // const companyName = companyInfo.companyName;\n//   // const bots = companyInfo.bots\n//   const { repair: repairBots, defence: defenceBots } = bots;\n//   // const repairBots = bots.repair\n//   // const defenceBots = bots.defence\n//   return `${companyName} has ${\n//     repairBots + defenceBots\n//   } bots in stock. Repair bots count is ${repairBots}. Defence bots count is ${defenceBots}`;\n// }\n\n// // // Было\n// // // console.log(getBotReport('Cyberdyne Systems', 150, 50));\n\n// // // Ожидается\n// console.log(\n//   getBotReport({\n//     companyName: \"Cyberdyne Systems\",\n//     bots: {\n//       repair: 150,\n//       defence: 50,\n//     },\n//   })\n// ); // \"Cyberdyne Systems has 200 bots in stock\"\n// // ```\n\n// window.getBotReport({\n//   companyName: \"Cyberdyne Systems\",\n//   bots: {\n//     repair: 150,\n//     defence: 50,\n//   },\n// });\n\n// const user = {\n//   name: \"Bob\",\n//   age: 23,\n// };\n\n// const { name, age } = user;\n\n// ## Example 4 - Деструктуризация\n\n// Перепиши функцию так, чтобы она принимала объект параметров со свойствами\n// `companyName` и `stock` и выводила репорт о количестве товаров на складе любой\n// компании.\n\n// ```js\n// // Решение\n// function getStockReport({ companyName, stock }) {\n//   let total = 0;\n//   for (const value of Object.values(stock)) {\n//     total += value;\n//   }\n//   return `${companyName} has ${total} items in stock`;\n// }\n\n// console.log(\n//   getStockReport({\n//     companyName: 'Cyberdyne Systems',\n//     stock: {\n//       repairBots: 150,\n//       defenceBots: 50,\n//     },\n//   }),\n// ); // \"Cyberdyne Systems has 200 items in stock\"\n\n// console.log(\n//   getStockReport({\n//     companyName: 'Belacci',\n//     stock: {\n//       shoes: 20,\n//       skirts: 10,\n//       hats: 5,\n//     },\n//   }),\n// ); // \"Belacci has 35 item in stock\"\n// ```\n\n// ## Example 5 - Операция spread\n\n// const settings = {\n//   theme: \"light\",\n//   fontFamily: \"default\",\n//   navbar: \"fixed\",\n//   markdown: \"basic\",\n// };\n\n// const updatesettings = {\n//   theme: \"dark\",\n//   fontFamily: \"monospace\",\n//   navbar: \"static\",\n//   markdown: \"basic\",\n// };\n\n// function updateSettingsHandler(defaultSettings, userSettings) {\n//   return {\n//     ...defaultSettings,\n//     ...userSettings,\n//   };\n// }\n\n// const siteSettings = {\n//   ...settings,\n//   ...updatesettings,\n// };\n\n// const siteSettings = {\n//   theme: \"dark\",\n//   fontFamily: \"monospace\",\n//   navbar: \"static\",\n//   markdown: \"basic\",\n// };\n\n// // const technology = [\"HTML\", \"CSS\"];\n// const programLanguages = [\"Javascript\", \"Typescript\"];\n// // const frameworks = [\"React\", \"Next\"];\n// // const fullStack = [...technology, ...programLanguages, ...frameworks];\n// const fullStack = [\"HTML\", \"CSS\", ...programLanguages, \"React\", \"Next\"];\n\n// ## Example 6 - Операция rest\n\n// function getMargin() {\n//   console.log(Array.from(arguments));\n// }\n\n// function getMargin(...args) {\n//   console.log(args);\n// }\n\n// getMargin(12);\n// getMargin(12, 15);\n// getMargin(12, 15, 20);\n// getMargin(12, 15, 20, 45);\n\n// function getUserInfo(name, age, address, ...props) {}\n\n// getUserInfo(\"Bob\", 34, \"London\", \"0987654321\", \"user@gmail.com\");\n// getUserInfo(\"Bob\", 34, \"London\");\n\n// 12\n// 12 12\n// 12 12 12\n// 12 12 12 12\n\n// ```\n\n// Можно разобрать вот это тему Изменение имени переменной\n// const firstBook = {\n//   title: \"The Last Kingdom\",\n//   coverImage:\n//     \"https://images-na.ssl-images-amazon.com/images/I/51b5YG6Y1rL.jpg\",\n// };\n\n// const {\n//   title: firstTitle, // const firstTitle = firstBook.title\n//   // coverImage: firstCoverImage = \"https://via.placeholder.com/640/480\", // const firstCoverImage = firstBook.coverImage\n// } = firstBook;\n// const firstCoverImage = \"https://via.placeholder.com/640/480\";\n\n// console.log(firstTitle); // The Last Kingdom\n// console.log(firstCoverImage); // https://images-na.ssl-images-amazon.com/images/I/51b5YG6Y1rL.jpg\n\n// const secondBook = {\n//   title: \"Сон смешного человека\",\n// };\n\n// const {\n//   title: secondTitle,\n//   coverImage: secondCoverImage = \"https://via.placeholder.com/640/480\",\n// } = secondBook;\n\n// console.log(secondTitle); // Сон смешного человека\n// console.log(secondCoverImage); // https://via.placeholder.com/640/480\n\n// объясните пожалуйста что тут происходит\n// function countProps(object) {\n//   let propCount = 0;\n//   // Change code below this line\n//   for (const key in object) {\n//     // object = firstBook\n//     // key = title\n//     // key = coverImage\n//     if (object.hasOwnProperty(key)) {\n//       propCount += 1; // = 2\n//     }\n//   }\n//   // Change code above this line\n//   return propCount; // 2\n// }\n\n// const firstBook = {\n//   title: \"The Last Kingdom\",\n//   coverImage:\n//     \"https://images-na.ssl-images-amazon.com/images/I/51b5YG6Y1rL.jpg\",\n// };\n\n// countProps(firstBook);\n// const first = { propA: 5, propB: 10, propC: 50 };\n// const second = { propC: 15, propD: 20 };\n\n// const third = { ...first, ...second };\n// a 5, b 10, c 15, d 20\n// console.log(third); // { propA: 5, propB: 10, propC: 15, propD: 20 }\n\n// const fourth = { ...second, ...first };\n//  d 20, a 5, b 10, c 50\n// console.log(fourth); // { propA: 5, propB: 10, propC: 50, propD: 20 }\n\n//-----spread-----\n\n// let s1 = [1, 5, 4, 7];\n// let s2 = [3, 8, 9, ...s1, 6, 9, 9];\n\n// console.log('s2', s2);\n\n// //копія масиву\n// let s3 = [...s1];\n// s3.push(99);\n// console.log('s1', s1);\n// console.log('s3', s3);\n\n//видалення дублювань\n// let s4 = [1, 5, 4, 7, 5, 7, 2, 1, 4];\n// let s5 = [...new Set(s4)];\n// console.log('s5', s5); //s5 (5) [1, 5, 4, 7, 2]\n\n// //строка\n// let s6 = 'abba';\n// let s7 = [...s6];\n\n// console.log('s7', s7); //s7 (4) ['a', 'b', 'b', 'a']\n\n// //з обєктами\n\nlet b1 = {\n  name: 'Inna',\n  param1: 15,\n};\nlet b2 = {\n  name: 'Inna',\n  param2: 15,\n};\n\nlet resObj1 = { ...b1 };\nlet resObj2 = { ...b1, ...b2 };\nconsole.log(resObj1); //{name: 'Inna', param1: 15}\nconsole.log(resObj2); //{name: 'Inna', param1: 15, param2: 15}\n\n//додавання властивостей\nlet b3 = { ...b1, bike: true };\nconsole.log('b3', b3); //b3 {name: 'Inna', param1: 15, bike: true}\n"],"names":["$faeb67a0399e3753$var$b1","name","param1","$faeb67a0399e3753$var$resObj1","$faeb67a0399e3753$var$resObj2","param2","console","log","$faeb67a0399e3753$var$b3","bike"],"version":3,"file":"index.45e654c7.js.map"}